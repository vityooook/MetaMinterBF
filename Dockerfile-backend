FROM node:20.17.0-alpine3.20 AS development

RUN apk add --no-cache --update \
            python3 \
            make \
            g++ \
            krb5-dev \
            bash && \
    rm -rf /tmp/* /var/tmp/*

WORKDIR /app

ARG TYPE_SERVER
ENV TYPE_SERVER="$TYPE_SERVER"

COPY ./$TYPE_SERVER/package.json ./$TYPE_SERVER/package-lock.json ./
RUN npm install
RUN npm ci


FROM node:20.17.0-alpine3.20 AS build

RUN apk add --no-cache --update \
            python3 \
            make \
            g++ \
            krb5-dev \
            bash && \
    rm -rf /tmp/* /var/tmp/* 

WORKDIR /app

ARG TYPE_SERVER
ENV TYPE_SERVER="$TYPE_SERVER"

COPY $TYPE_SERVER/package.json $TYPE_SERVER/package-lock.json ./$TYPE_SERVER/
COPY --from=development /app/node_modules ./$TYPE_SERVER/node_modules
COPY $TYPE_SERVER ./$TYPE_SERVER
COPY shared ./shared

WORKDIR /app/$TYPE_SERVER
RUN npm run build

ENV NODE_ENV=production 

RUN npm install
RUN npm ci --only=production && npm cache clean --force

FROM node:20.17.0-alpine3.20 AS production

ARG TYPE_SERVER
ENV TYPE_SERVER="$TYPE_SERVER"

WORKDIR /app

COPY --from=build /app/$TYPE_SERVER/node_modules ./$TYPE_SERVER/node_modules
COPY --from=build /app/$TYPE_SERVER/dist ./$TYPE_SERVER/dist
COPY shared ./shared

WORKDIR /app/$TYPE_SERVER

EXPOSE 3002

# Start the server using the production build
CMD [ "node", "dist/main.js" ]